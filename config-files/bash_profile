source ~/.profile
source ~/.profile_work

##################### source something ###########################




##################### start  alias ###########################

#docker
alias docll='cat /Users/darren/.oh-my-zsh/plugins/docker-compose/docker-compose.plugin.zsh'
alias dockerlog='docker logs -tf --tail 10 '
alias dockerps='docker ps -a  --format "table {{.ID}}\t{{.Names}}\t{{.Ports}}\t{{.Status}}"'
alias docimg='docker images'

#golang 相关
alias go-deploy='/Users/darren/go/src/deploy'
alias gosrc='/Users/darren/go/src'
alias gotest='/Users/darren/go/src/person-go'
alias pbgen="protoc --go_out=plugins=irpc:. *.proto"
alias pbg="protoc --go_out=plugins=grpc:. *.proto"
alias pbgenswagger="pbgen && swagger generate spec -o ./$(basename $(pwd)).json"
alias cdswag="/Users/darren/go/src/testgo/modgo/swag"
alias gvvv='go vet $(go list ./... | grep -v /vendor/)'
alias gmm='go mod tidy'
#ssh快速链接
alias sshnewu='ssh root@119.28.10.43'

#快捷打开路径
alias ppp='cd ~/projects'
alias guide='cd ~/projects/guide'
alias og='open -a goland '
alias openvs='open -a Visual\ Studio\ Code '
alias opensb='open -a Sublime\ Text '

#自定义快捷命令
alias duhd='du -h -d 1'
alias ppsql='psql -U postgres'
alias sss_bash_profile='source ~/.bash_profile'
alias pps='ps -ef |grep '
alias tf='tail -f '
alias tn='tail -n 10'
alias ll='ls -alth'
alias kk='ls -all'
alias cc='clear'
alias ls='ls -G --color=auto'
alias vimbash_pro='vim ~/.bash_profile'
alias 查的='cd '
alias wgetfile='wget --no-check-certificate --content-disposition '
alias curlfile='curl  -LJO '
alias ip='ipconfig getifaddr en6'
alias rrf='/bin/rm -rf '
# 显示文件树
alias fffd='find . -print | sed -e "s;[^/]*/;|__;g;s;__|;  |;g"'
alias bbb='bpytop'
alias uuuu='ulimit -n 4096 '


#快速查看 git 快捷命令
alias lessgit='less /Users/darren/.oh-my-zsh/plugins/git/git.plugin.zsh'
alias gcld='gcl --depth 1'
# gstaa='git stash apply'
alias gtime='for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r'
#设置最大连接数
ulimit -n 5242

###################### end  alias ###########################



##################### start  export ###########################

#golang
export GOPATH=/Users/darren/go
#export GOROOT=/usr/local/go
#export GOROOT=/Users/darren/go/go1.18.5
#导入 GO111MODULE=on  不使用GOPATH运行否则请手动下载下一步的包 用于go get 命令
export GO111MODULE=on
export PATH=$PATH:/Users/darren/go/bin
export GOPROXY=https://goproxy.cn,direct
# 防止报mac cpu: error: 'TARGET_OS_MAC' is not defined 加这个环境变量
#export CGO_CFLAGS=-Wno-undef-prefix

#python
alias py="/usr/local/bin/python3"
alias python="/usr/local/bin/python3"
alias python-config="/usr/local/bin/python3.7m-config"


#rust
export RUSTUP_DIST_SERVER="https://rsproxy.cn"
export RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"


#使用到的环境变量
export PATH=$PATH:/usr/local/sbin
export PATH=/usr/local/openresty/nginx/sbin:$PATH
export PATH=/Users/darren/src/kafka2.11-1.1.1/bin:$PATH
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/Users/darren/src/apache-maven-3.5.4/bin  #maven的路径
export PATH=$PATH:~/src/apache-tomcat-8.5.34/bin
export PATH=$PATH:/usr/local/lib/node_modules/eslint/bin
export PATH=$PATH:/opt/homebrew/bin
export PATH=$PATH:/Users/darren/src/redis-5/src
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
# ruby brew
export PATH=/usr/local/opt/ruby/bin:$PATH
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"
export DISPLAY=:0

###################### end  export ###########################



###################### start  function ###########################


function redis-start(){
        redis-server /Users/darren/projects/guide/config-files/redis.conf
}


function sshinit(){
#遍历添加用户登录时添加本地秘钥
        for file in `ls ~/.ssh/id_rs* |grep -v pub`
                do
                        [ -r "$file" ] && ssh-add  "$file"
                                done
                                        unset file
}


#自动导入 vimrc 配置
function open_vimrc(){
        echo "先导入vim配置文件";
        cp /Users/darren/projects/guide/config-files/vimrc.conf ~/.vimrc;
        source ~/.vimrc;

}


###################### end  function ###########################

###################### start other ###########################

#终端代理配置 开启后每次打开终端都生效
function proxy {
        if [[ $1 = "on" ]]; then
                export http_proxy=http://127.0.0.1:8001
                        export https_proxy=http://127.0.0.1:8001
                        curl ifconfig.co/json
#      curl ip.gs
                        echo -e "已开启代理" http_proxy=$http_proxy https_proxy=$https_proxy

        elif [[ $1 = "btw" ]]; then
                         export http_proxy=http://127.0.0.1:4780
                        export https_proxy=http://127.0.0.1:4780
                        curl ifconfig.co/json
                        echo -e "已开启代理" http_proxy=$http_proxy https_proxy=$https_proxy

        elif [[ $1 = "off" ]]; then
                        unset http_proxy
                        unset https_proxy
                        git config --global --unset http.proxy
                        git config --global --unset https.proxy
                        echo -e "已关闭代理"
        elif [[ $1 = "git" ]]; then
                        git config --global http.proxy 'http://127.0.0.1:8001'
                        git config --global https.proxy 'http://127.0.0.1:8001'
                        echo -e "已经开启 git"
        elif [[ $1 = "gitsock" ]]; then
                        git config --global http.proxy 'socks://localhost:1080'
                        git config --global https.proxy 'socks://localhost:1080'
                        echo -e "已经开启 gitsock!"
        else
                echo -n "Usage: proxy [on|off|git] "
        fi
}

# 定期同步配置
function sync_bashprofile(){
	 if [[ $1 = "on" ]]; then
cp ~/.bash_profile ~/.bash_profile.bak$(date "+%H:%M:%S")
cp /Users/darren/projects/guide/config-files/bash_profile  ~/.bash_profile	
	else

cp ~/.bash_profile /Users/darren/projects/guide/config-files/bash_profile	
		fi
}

alias cman='man -M /usr/local/share/man/zh_CN '
#/Users/darren/.oh-my-zsh/themes/robbyrussell.zsh-theme 这里是直接篡改主题显示的配置 以下任意终端都生效：
PROMPT='$(date "+%H:%M:%S") ${ret_status}%{$fg[cyan]%}%d$(git_prompt_info) '
#PROMPT='$(date "+%H:%M:%S") '
ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[blue]%}(%{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%})%{$fg[yellow]%}✗"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"

###################### end  other ##########################
. "$HOME/.cargo/env"

export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles

