学习笔记
7.24

linux重启命令
reboot

查看当前目录每个文件夹的情况
du --max-depth=1 -h   /usr/
du -sh  /usr/

拨号，连接远程主机，带端口号
telnet 39.108.61.252 9092
7.23
上午连接新的服务器搭建kafka线上的环境。
/usr/local/system/src/kafka_2.11-1.1.0/bin/zookeeper-server-start.sh /usr/local/system/src/kafka_2.11-1.1.0/config/zookeeper.properties &

/usr/local/system/src/kafka_2.11-1.1.0/bin/kafka-server-start.sh /usr/local/system/src/kafka_2.11-1.1.0/config/server.properties &
/usr/local/system/src/kafka_2.11-1.1.0/bin/kafka-server-start.sh /usr/local/system/src/kafka_2.11-1.1.0/config/server-1.properties &
/usr/local/system/src/kafka_2.11-1.1.0/bin/kafka-server-start.sh /usr/local/system/src/kafka_2.11-1.1.0/config/server-2.properties &
/usr/local/system/src/kafka_2.11-1.1.0/bin/kafka-server-start.sh /usr/local/system/src/kafka_2.11-1.1.0/config/server-3.properties &


7.21

开启交易对流程：
首先开启全部日志监听：
cd /Users/apple/projects/exchange_engine
tail -f log/http.log
tail -f log/engine.log
tail -f log/async.log
tail -f log/trade_worker.log
首先启动撮合引擎
/Users/apple/projects/exchange_engine/restart.sh

查看日志正常后开始开启交易所
cd /Users/apple/projects/otc_php
检查启动ssdb和redis 
php cli.php  env start

检查是否启动ssdb
pstree |grep ssdb 
pstree |grep redis

开启后，再开始机器人下单
./order.sh


远程拷贝文件和目录(将此文件或目录内的文件，移动到对面文件或目录内部 **需要自己定义文件名称或者目录名**)

$scp -r server-1.properties root@47.95.7.124:/usr/local
$ sudo scp -r -P 55429 ./log root@139.196.110.54:/usr/local/testlog

7.20
利用命令grep在文件中搜索字符串
grep -r broker.address.family /
 ps aux | grep server.proper

iterm2的使用
即时重播
cmd-opt-B

MAc开机启动命令，导入配置
sudo launchctl load /Library/LaunchDaemons/io.redis.redis-server.plist
关闭
sudo launchctl stop io.redis.redis-server

7.19
每次重启电脑后，redis和ssdb有两个端口没有启动
在otc项目下运行这个，（先stop）然后就启动了
 php cli.php env start

  每次做交易时候先查看进程在不在！！！redis和ssdb  
没有就先启动下环境：
 php cli.php env start

(一共3个redis 2个ssdb)
历史操作命令；
redis-server /usr/local/etc/redis6378.conf 
 redis-cli -p 6378

 ssdb-server -d /usr/local/etc/ssdb8801.conf
 
http://btc_cny.engine.com/api/market?pair=BTC_CNY


sudo vim ~/Library/LaunchDaemons/io.redis.redis-server.plist

php_sapi_name — 返回 web 服务器和 PHP 之间的接口类型



7.18
rdies 看数据量
 zrange depth_orders_sell_limit_BTC_OMG 0 -1 
 根据关键词找数据
 keys depth*

 composer清理缓存
 rm -rf ~/.composer/cache/


7月17日
当有成交量时候打开redis
127.0.0.1:6378> keys depth*

模拟下单方法：
testSingleAction

环境变量中撮合引擎域名(交易撮合引擎域名)
export trade_host='btc_omg.engine.com'  
记着！！！！！！
要改host文件，要配置环境变量，要


撮合引擎数据库配置
 return [
            'adapter' => 'postgres',
            'dbname' => 'otc' . '_' . env('env', 'php'),
            'host' => env('otc_db_host', '127.0.0.1'),
            'port' => env('otc_db_port', 5432),
            'user' => env('otc_db_username', 'postgres'),
            'password' => env('otc_db_password', 'aaaa')
        ];



{"sell":{"user_id":92,"trade_id":63},"buy":{"user_id":99,"trade_id":64}}
zzy++++++++ 


https://ex.haobtc.io/trade_engine/orders/trade  


7月16号笔记

php显示所有参数
    info(func_get_args(), '.........');
func_get_args()



7月2号开始
1 phpstorm
2 navicat
3 sourcetree ,charles, istat menu


启动和停止ssdb服务
启动：ssdb-server /usr/local/etc/ssdb.conf 
守护进程启动方式 ssdb-server -d /usr/local/etc/ssdb.conf 
停止： ssdb-server /usr/local/etc/ssdb.conf -s stop 
重启：停止： ssdb-server /usr/local/etc/ssdb.conf -s restart 
启动客户端:ssdb-cli

支持数据类型
SSDB ⽀持三种数据类型, 别分是 KV(key-value), Hashmap(map), Zset(sorted set).

work_dir = /usr/local/var/db/ssdb/
pidfile = /usr/local/var/run/ssdb.pid

redis是内存数据库，ssdb是面向硬盘的存储;ssdb默认也没有集群管理的支持
它结合了redis和ssdb的优点，实现了基于LFU的热度统计和冷热交换，做到了低成本和高性能的高平衡

目录区别作用：
/usr/local下一般是你安装软件的目录，这个目录就相当于在windows下的programefiles这个目录 
/opt这个目录是一些大型软件的安装目录，或者是一些服务程序的安装目录


ffmpeg安装(音频视频转换包)

postgres操作：
pg_ctl -D /usr/local/var/postgres -l logfile start

pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log status
关闭：
pg_ctl -D /usr/local/var/postgres stop -s -m fast

查询端口占用情况  
lsof -i:8000
通过某个进程号显示该进程打开的文件
lsof -p 11968   
列出某个程序进程所打开的文件信息
lsof -c mysql

mac调出进程管理快捷键  alt+cmd+esc

ps -ef|grep post  查看系统进程


今天安装php7：
相应的位置
php, phpize, php-config /usr/local/opt/php70/bin
php-fpm /usr/local/opt/php70/sbin/php-fpm   //   /usr/local/opt/php@7.0/sbin/php-fpm  //二级显示  /usr/local/etc/php/7.0/php-fpm.d/

php.ini /usr/local/etc/php/7.0/php.ini 
   当前配置文件在：  /usr/local/lib/php.ini
查找 php.ini命令 ： php --ini


php-fpm.conf /usr/local/etc/php/7.0/php-fpm.conf

 /usr/local/etc/php-fpm.conf

非用户目录下应该在/etc目录下的配置文件！！！
include=/usr/local/etc/php-fpm.d/*.conf

配置完成后，测试，显示成功！
appledeiMac-2:php-fpm.d apple$ php-fpm -t
[03-Jul-2018 12:49:52] NOTICE: configuration file /private/etc/php-fpm.conf test is successful
停止fpm:
 sudo killall php-fpm

当我配置完成后报错说没有当前用户所属的组：经过查找后：staff是当前mac用户的组
查找命令：
id -a user  // 可以查到指定用户所属组更详细的信息
groups // 查看当前用户所属组
groups user_name // 查看指定用户所属组

安装phalcon时候成功了：

Build complete.
Don't forget to run 'make test'.

Installing shared extensions:     /usr/lib/php/extensions/no-debug-non-zts-20160303/
cp: /usr/lib/php/extensions/no-debug-non-zts-20160303/#INST@4276#: Operation not permitted
make: *** [install-modules] Error 1

Thanks for compiling Phalcon!
Build succeed: Please restart your web server to complete the installation

查看安装情况：
php -m|grep phalcon


nginx相关路径
/usr/local/etc/nginx/nginx.conf （配置文件路径）

/usr/local/etc/nginx/servers  ( 虚拟主机记录值~~ )

/usr/local/var/www （服务器默认路径）

/usr/local/Cellar/nginx/1.8.0 （安装路径）

 重启（如果端口小鱼1000则需要在前面加sudo）
# 重新加载配置|重启|停止|退出 


nginx -s reload|reopen|stop|quit
#测试配置是否有语法错误
sudo nginx -t
nginx: the configuration file /usr/local/etc/nginx/nginx.conf syntax is ok
nginx: configuration file /usr/local/etc/nginx/nginx.conf test is successful


开机自动启动任务目录：
~/Library/LaunchAgents

redis已安装：
redis-server /usr/local/etc/redis.conf
 





7.4工作日志：
Linux 的软件安装目录是也是有讲究的，理解这一点，在对系统管理是有益的
/usr：系统级的目录，可以理解为C:/Windows/，

/usr/lib理解为C:/Windows/System32。

/usr/local：用户级的程序目录，可以理解为C:/Progrem Files/。用户自己编译的软件默认会安装到这个目录下。

/opt：用户级的程序目录，可以理解为D:/Software，opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。


php目录
/usr/local/etc/pear.conf
/usr/local/lib/php 



linux 查找目录或文件
查找目录：find /（查找范围） -name '查找关键字' -type d
查找文件：find /（查找范围） -name 查找关键字 -print

 find ~ -iname  "*说明*"



改变mac环境变量
 vim ~/.bash_profile    编辑环境变量
source ~/.bash_profile   更新环境变量


brew常用命令:
brew update                        　　#更新brew可安装包，建议每次执行一下
brew search php55                   #搜索php5.5
brew tap josegonzalez/php        #安装扩展<gihhub_user/repo>   ,可以获得更多的资源
brew tap                            #查看安装的扩展列表
brew install php55                 #安装php5.5
brew remove  php55                 #卸载php5.5
brew upgrade php55                 #升级php5.5
brew options php55                 #查看php5.5安装选项
brew info    php55                 #查看php5.5相关信息
brew home    php55                  #访问php5.5官方网站
brew services list                  #查看系统通过 brew 安装的服务
brew services cleanup               #清除已卸载无用的启动配置文件
brew services restart php55       #重启php-fpm


乌兰察布东路办事处党工委
呼和浩特市赛罕区组织部


7.5学习笔记

编辑php文件，做测试
vi html/t.php
    echo 'hello world!';

访问 php 脚本
curl localhost/t.php

每次访问的时候报错502 是因为php没有开启，没有监听
需要查看下端口9000  
netstat -antp
然后启动 php-cgi -b 127.0.0.1:9000  以后用fpm不用这个进程管理


查看当前程序运行目录命令：
appledeiMac-2:nginx apple$ which php-fpm
/usr/local/bin/php-fpm

使用到git熟悉命令：
Command line instructions

Git global setup
git config --global user.name "张振宇"
git config --global user.email "zhangzhenyu@iyich.com"

Create a new repository
git clone https://code.365yf.cc/zhangzhenyu/test.git
cd test
touch README.md
git add README.md
git commit -m "add README"
git push -u origin master

Existing folder
cd existing_folder
git init
git remote add origin https://code.365yf.cc/zhangzhenyu/test.git
git add .
git commit -m "Initial commit"
git push -u origin master

Existing Git repository
cd existing_repo
git remote rename origin old-origin
git remote add origin https://code.365yf.cc/zhangzhenyu/test.git
git push -u origin --all
git push -u origin --tags

它会在解决冲突后生成一个原来冲突的备份
git config --global mergetool.keepBackup false


流程
git add .
 git commit -m ”同步dev“
git push -u origin Darren

安装配置包时候报出未安装信息：
Package endroid/qrcode is abandoned, you should avoid using it. Use endroid/qr-code instead.
Package phpoffice/phpexcel is abandoned, you should avoid using it. Use phpoffice/phpspreadsheet instead.
记录一下~




比较两个目录下的文件（目录比较命令）
diff -r dir1 dir2 
复制目录时，使用-r选项即可递归拷贝，如下：
cp -r dir1 dir2



查看phalcon版本信息
appledeiMac-2:phalcon-devtools apple$ phalcon -v

Phalcon DevTools (3.4.0)

Environment:
  OS: Darwin appledeiMac-2.local 17.4.0 Darwin Kernel Version 17.4.0: Sun Dec 17 09:19:54 PST 2017; root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64
  PHP Version: 7.2.1
  PHP SAPI: cli
  PHP Bin: /usr/local/bin/php
  PHP Extension Dir: /usr/local/lib/php/extensions/no-debug-non-zts-20170718
  PHP Bin Dir: /usr/local/bin
  Loaded PHP config: /usr/local/lib/php.ini
Versions:
  Phalcon DevTools Version: 3.4.0
  Phalcon Version: 3.3.2
  AdminLTE Version: 2.3.6


echo $PATH
执行顺序为：/etc/profile -> (~/.bash_profile | ~/.bash_login | ~/.profile) -> ~/.bashrc -> /etc/bashrc -> ~/.bash_logout

/etc/profile /etc/paths ~/.bash_profile ~/.bash_login ~/.profile ~/.bashrc


7.6学习笔记：


打开php报错提示：
php-fpm  
在配置文件中：/etc/php-fpm.d/www.conf
display_errors  on

错误日志目录
error_log
; Example:
error_log = /usr/local/var/log/php_errors.log

php_admin_value[error_log] =/usr/local/var/log/fpm-php.www.log

vim /usr/local/var/log/fpm-php.www.log

学习postgres:
登录数据库用户：
psql -U [user] -d [database] -h [host] -p [port]

\password：设置当前登录用户的密码
\h：查看SQL命令的解释，比如\h select。
\?：查看psql命令列表。
\l：列出所有数据库。
\c [database_name]：连接其他数据库。
\d：列出当前数据库的所有表格。
\d [table_name]：列出某一张表格的结构。
\du：列出所有用户。
\e：打开文本编辑器。
\conninfo：列出当前数据库l和连接的信息。
\password [user]: 修改用户密码
\q：退出

psql -U postgres -d postgres -h 127.0.0.1 -p 5432

appledeiMac-2:postgresql-10.4 apple$ which psql
/usr/local/pgsql/bin/psql

删除数据库：
dropdb -U user dbname

	在终端上查看显示已创建的列表
psql -l
	
DROPD  TABLE test;

为mac系统中建立软连接：file1是源文件
ln -s file1 file2

7月七日
postgresql：常见角色权限
 ALTER ROLE patrick CREATEDB
 CREATE DATABASE databasename;


 学习模版volt
 {% for i in 0..100 %}
  <div>{{i}}</div>
{% endfor %}、


{{ url('user/detail?uid='~user['uid']) }}

查看版本信息 brew
 brew info openresty

使用配置如下 ~/openresty-test
 nginx -p `pwd`/ -c conf/nginx.conf
 
 


7月9号
git 
仅显示最近的两次更新
git log -p -2
查看日志更清晰
git log --pretty=oneline

查看分支情况
git branch -va
切换到分支name
git checkout -b name


则可以使用-u选项指定一个默认主机，这样后面就可以不加任何参数使用git push
 git push -u origin master

 删除分支 
 git branch -d temp

拉取远程分支到本地分支
 git pull origin dev:Darren

 查看远程仓库
git remote -v
从远程获取最新版本到本地
git fetch origin aaa
比较远程分支和本地分支
 git log -p aaa origin/aaa
合并远程分支到本地
git merge origin/aaa



  获取客户端ip
   function remoteIp()
    {
        $remote_ip = $_SERVER["REMOTE_ADDR"];

        $forwarded_for = $this->headers("X-Forwarded-For");
        if ($forwarded_for) {
            foreach (explode(",", $forwarded_for) as $ip) {
                $ip = trim($ip);
                if (preg_match("/^(127|192|10)\./i", $ip)) {
                    continue;
                }
                return $ip;
            }
        }

        $real_ip = $this->headers("X-Real-Ip");
        if ($real_ip) {
            return $real_ip;
        }
        return $remote_ip;
    }


7月10号
redis命令  

redis-server
redis-cli ping 


apache相对nginx的优点
rewrite，比nginx 的rewrite 强大
模块超多，基本想到的都可以找到
少bug，nginx的bug相对较多
超稳定
Apache对PHP支持比较简单，Nginx需要配合其他后端用


java8
/usr/local/Caskroom


研究Kafka
分布式的消息系统
 
kafka节点之间如何复制备份的？
kafka消息是否会丢失？为什么？
kafka最合理的配置是什么？
kafka的leader选举机制是什么？
kafka对硬件的配置有什么要求？
kafka的消息保证有几种方式？

brew安装kafka，zooker 已经安装路径
brew services start zookeeper
zkServer start
/usr/local/Cellar/zookeeper/3.4.12
/usr/local/Cellar/kafka/1.1.0

/usr/local/etc/kafka/
安装的配置文件位置
/usr/local/etc/kafka/server.properties
/usr/local/etc/kafka/zookeeper.properties

以server.properties的配置，启动kafka
在kafka的bin目录下：(/usr/local/Cellar/kafka/1.1.0  )
执行命令：./kafka-server-start /usr/local/etc/kafka/server.properties

kafka数据存储在了(kafka日志)
/usr/local/var/lib/kafka-logs/

当前日志存储到了两个borker下（0和1）
ll  /usr/local/var/lib/kafka-logs/engine.com-0/

新建session，查看kafka的topic
在kafka的bin目录下：
执行命令：./kafka-topics --list --zookeeper localhost:2181

启动zookeeper系统
zookeeper-server-start /usr/local/etc/kafka/zookeeper.properties
启动kafka系统
kafka-server-start.sh /usr/local/etc/kafka/server-1.properties

备注：要挂到后台使用：（挂载）
sh bin/kafka-server-start.sh config/server.properties &

快捷命令（每次开机都都需要启动）
 zookeeper-server-start /usr/local/etc/kafka/zookeeper.properties

kafka-server-start.sh /usr/local/etc/kafka/server.properties
kafka-server-start.sh /usr/local/etc/kafka/server-1.properties
kafka-server-start.sh /usr/local/etc/kafka/server-2.properties
kafka-server-start.sh /usr/local/etc/kafka/server-3.properties

新建topic
 kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic zzyk
 kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 3 --topic engine_test

#--zookeeper是集群列表，可以指定所有节点，也可以指定为部分列表
#--replication-factor 为复制数目，数据会自动同步到其他broker上，防止某个broker宕机数据丢失
#--partitions 一个topic可以切分成多个partition，一个消费者可以消费多个partition，但一个partition只能被一个消费者消费

生产消息
kafka-console-producer.sh --broker-list localhost:9092 --topic zzyk
kafka-console-producer.sh --broker-list localhost:9092 --sync --topic zzy0

kafka-console-producer.sh --broker-list 192.168.1.181:9092,192.168.1.181:9093,192.168.1.181:9094  --topic topic_1 
消费消息
kafka-console-consumer.sh --zookeeper localhost:2181   --from-beginning  --topic engine-test
 
kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic engine-test




kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 3 --topic test3

kafka-console-producer.sh --broker-list localhost:9092 --topic test1

kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic test1

查看当前主题 
kafka-topics.sh --list --zookeeper localhost:2181
查看当前主题详细信息
kafka-topics.sh --zookeeper 127.0.0.1:2181  --describe --topic zzy10
查看全部主题信息
kafka-topics.sh --describe --zookeeper localhost:2181
查看consumer group列表（新版命令）
kafka-consumer-groups.sh --new-consumer --bootstrap-server 127.0.0.1:9092 --list
查看consumer group列表（老命令）
kafka-consumer-groups.sh --zookeeper 127.0.0.1:2181 --list

删除主题：
kafka-topics.sh --delete --zookeeper localhost:2181 --topic zzyk 
  此时你若想真正删除它，可以如下操作：

     （1）登录zookeeper客户端：命令：./bin/zookeeper-client

     （2）找到topic所在的目录：ls /brokers/topics

     （3）找到要删除的topic，执行命令：rmr /brokers/topics/【topic name】即可，此时topic被彻底删除。
    另外被标记为marked for deletion的topic你可以在zookeeper客户端中通过命令获得：ls /admin/delete_topics/【topic name】，

    如果你删除了此处的topic，那么marked for deletion 标记消失
删除 消费者组
kafka-consumer-groups.sh --zookeeper 127.0.0.1:2181 --delete --group <group-name>

 

查看某个组中的topic信息
kafka-consumer-groups.sh --zookeeper 127.0.0.1:2181 --group 1 --describe

kafka-consumer-groups.sh --new-consumer --bootstrap-server 127.0.0.1:9092 --group 1 --describe


当有跨机的producer或consumer连接时需要配置/usr/local/etc/kafka/server.properties的host.name，要不然跨机的连不上。


分别打开配置文件进行如下修改：
broker.id=0  #三个broker的id不能相同，因此改为不同的id
listeners=PLAINTEXT://192.168.10.152:9092 #服务器监听的地址，如果不配置从java.net.InetAddress.getCanonicalHostName()获得
host.name=192.168.10.152 #broker 机器ip
zookeeper.connect=192.168.10.152:2181,192.168.10.153:2181,192.168.10.170:2181
 



kafka-manager启动
已经添加快捷操作命令： 
~/kafka_manager
nohup bin/kafka-manager -Dconfig.file=conf/application.conf -Dhttp.port=9001 &


最小配置是要用于kafka管理器状态的zookeeper主机。这可以在conf目录中的application.conf文件中找到。相同的文件将打包在分发zip文件中; 您可以在解压缩所需服务器上的文件后修改设置。

kafka-manager.zkhosts="my.zookeeper.host.com:2181"
您可以通过逗号分隔多个zookeeper主机，如下所示：

kafka-manager.zkhosts="my.zookeeper.host.com:2181,other.zookeeper.host.com:2181"
或者，ZK_HOSTS如果您不想对任何值进行硬编码，请使用环境变量。

ZK_HOSTS="my.zookeeper.host.com:2181"



kafka配置参数
earliest 
当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费 
latest 
当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据 
none 
topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常



kafka记录方法名称对应主题


action_name （key）             url              otc—-action
notifyMarketData    ticker_notify_url     ticker     
notifyCancelResult     cancel_notify_url.  cancel
notifyDepth       depth_notify_url.       depths
notifyKline       kline_notify_url.       update_kline
checkAndNotifyKline   kline_notify_url      update_kline
notifyTrade           trade_notify_url       trade   



php安装扩展时候先phpize然后在配置安装并指定安装配置文件
./configure --with-php-config=/usr/bin/php-config  （ /Users/apple/src/php-7.2.1/scripts/php-config(优先使用这个)  ）




7月10日

本人今天下午刚好遇到同样的问题，现象：
1.在命令行下面查看php版本是: PHP 5.6.29
2.使用浏览器访问,php版本是:PHP 5.5.27

原因：
我的机子是之前在一个文件(org.php.php-fpm.plist)里设置过开机启动php-fpm，那个时候的php-fpm指定路径使用的是php自带的；
后来我又新装了PHP 5.6.29,没有及时修改这个文件里的php-fpm路径。

解决办法：将文件(org.php.php-fpm.plist)里的php-fpm路径修改为php5.6的php-fpm对应路径，然后重启机子即可解决

 /usr/local/bin/php-fpm   7.2
/usr/sbin/php-fpm  7.1

解决方案2：我发现  ~/Library/LaunchAgents/ 目录下的开机自动启动文件中fpm的配置是原来本机自带php的fpm路径，忽然恍然大悟~我就查看了下当前使用的fpm路径   (which php-fpm）然后将该目录复制到配置文件中，最后重启电脑后，每次启动的php就是我想要的哪个7.2.1了，没问题了~



flag今天apache占用80导致不能用nginx
梁哥先查了下状态，在运行
nginx -t
sudo nginx 
然后就好了！！！


nginx配置location

location  = / {
  # 只匹配"/".
  [ configuration A ] 
}
location  / {
  # 匹配任何请求，因为所有请求都是以"/"开始
  # 但是更长字符匹配或者正则表达式匹配会优先匹配
  [ configuration B ] 
}
location ^~ /images/ {
  # 匹配任何以 /images/ 开始的请求，并停止匹配 其它location
  [ configuration C ] 
}
location ~* .(gif|jpg|jpeg)$ {
  # 匹配以 gif, jpg, or jpeg结尾的请求. 
  # 但是所有 /images/ 目录的请求将由 [Configuration C]处理.   
  [ configuration D ] 
}

@location 例子
error_page 404 = @fetch;

location @fetch(
proxy_pass http://fetch;
)

 
 

openresty最后成功编译安装的配置信息
./configure --with-cc-opt="-I/usr/local/opt/openssl/include/ -I/usr/local/opt/pcre/include/" --with-ld-opt="-L/usr/local/opt/openssl/lib/ -L/usr/local/opt/pcre/lib/" --with-http_drizzle_module --with-http_iconv_module --with-http_postgres_module



7月12日
查看进程树
 pstree -p 2500
 

查看端口，监听端口
sudo lsof -Pni4 | grep LISTEN | grep php

 ps -ef | grep nginx

查看端口：
lsof -i:80


 nginx日志
 /usr/local/Cellar/nginx/1.15.0/logs

 /usr/local/var/log/nginx
撮合引擎配置文件
 /Users/apple/projects/exchange_engine

pstree |grep server.php 
  pstree | grep server
  tail -f error.log
  tail -f /usr/local/Cellar/nginx/1.15.0/logs/error.log


tail -f /usr/local/var/log/nginx/error.log
  查看nginx版本信息详细信息
  nginx -V 

  



7月13日
把“Hello”的首字符转换为小写。：
echo lcfirst("Hello world!");

xdebug日志：
tail -f /usr/local/var/log/xdebug.log


kafka

系统启动路径：()
/usr/local/etc/kafka/server.properties
(启动Zookeeper server)
/usr/local/etc/kafka/zookeeper.properties

Mac OS X 清理 DNS 缓存
sudo killall -HUP mDNSResponder

Linux 清理 DNS 缓存
sudo rcnscd restart
